// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name HeadPoseFramework
import AVFoundation
import Foundation
@_exported import HeadPoseFramework
import Swift
import UIKit
import _Concurrency
public protocol ReceiverResultDelegate : ObjectiveC.NSObjectProtocol {
  func receiverResult(isSuccess: Swift.Bool, filePath: Swift.String)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class DynoEkycView : UIKit.UIView, AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate {
  @_Concurrency.MainActor(unsafe) open var normalString: Swift.String
  @_Concurrency.MainActor(unsafe) open var blinkString: Swift.String
  @_Concurrency.MainActor(unsafe) open var faceUpString: Swift.String
  @_Concurrency.MainActor(unsafe) open var faceDownString: Swift.String
  @_Concurrency.MainActor(unsafe) open var faceLeftString: Swift.String
  @_Concurrency.MainActor(unsafe) open var faceRightString: Swift.String
  @_Concurrency.MainActor(unsafe) open var receiverResultDelegate: HeadPoseFramework.ReceiverResultDelegate?
  @_Concurrency.MainActor(unsafe) @objc public func captureOutput(_ output: AVFoundation.AVCaptureOutput, didOutput sampleBuffer: CoreMedia.CMSampleBuffer, from connection: AVFoundation.AVCaptureConnection)
  @objc deinit
}
